Swagger for Play 2.0 Apps

>>>>>INSTALLATION
0. This works with Play 2.0 

1. Clone and build branch scala-2.9.1-1 of wordnik-oss project from https://github.com/wordnik/wordnik-oss: 'git checkout --track remotes/origin/scala-2.9.1-1'. Build using mvn clean install. You may need to do mvn -N the first time.

2. Clone and build branch scala-2.9.1-1 of swagger-core project from https://github.com/wordnik/swagger-core: 'git checkout --track remotes/origin/scala-2.9.1-1'. Build using mvn clean install. You may need to do mvn -N the first time.

3. Clone swagger-play2 from https://github.com/ayush/swagger-play2

4. Deploy swagger-play2 using play2's publish-local command

5. In YOUR APP's Build.scala, add this dependency
  	"swagger-play2" %% "swagger-play2" % "1.0"

6. In YOUR APP, do reload/update and swagger-play2 should be present.

>>>>>USAGE - routes file
in YOUR APP's routes add these lines:
# Swagger - Root Resources Listing
GET  /resources.json  		controllers.ApiHelpController.getResources
GET  /resources.xml				controllers.ApiHelpController.getResources

# Swagger - Resources
GET  /admin.json				controllers.ApiHelpController.getResource(path = "/admin")
GET  /admin.xml					controllers.ApiHelpController.getResource(path = "/admin")

GET  /admin.json/health			controllers.AdminController.getHealth()
GET  /admin.xml/health			controllers.AdminController.getHealth()
GET  /admin.json/ping			controllers.AdminController.ping()
GET  /admin.xml/ping			controllers.AdminController.ping()

>>>>>USAGE - controllers
For Swagger to recognize your controller methods as API point, you can add the following annotations to a controller method:
  @Path("/add-employee")  
  @ApiOperation(value = "Add a new employee", notes = "", responseClass = "string", httpMethod = "POST")
  @ApiParamsImplicit(Array( 
  new ApiParamImplicit(name = "id", value = "id of employee", required = true, dataType = "string", paramType = "query"),
  	new ApiParamImplicit(name = "name", value = "Name of employee", required = true, dataType = "string", paramType = "query"),
  	new ApiParamImplicit(name = "salary", value = "The salary which the poor soul gets", required = true, dataType = "string", paramType = "query")
  ))
  def addEmployee() = Action { implicit request =>
     // get the params and do the jig
  }
